# Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться
# в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить
# рубли и копейки, как добавить нули, если, например, получилось
# 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по
# возрастанию, написав минимум кода?
import math

price = [25.50, 0.80, 0.08, 1058.35, 49.04, 6.05, 8.00, 9.10, 67.24, 55.00, 65.20, 88.34, 90.50, 34.20, 22.88]
message = ''
# проход по списку
for a in price:
    whole_part, fractional_part = a // 1, round(a % 1, 2) # получечие числа до запятой и после запятой
    fractional_part = str(fractional_part).split('.') # преобразование в лист со строками
    if len(fractional_part[1]) == 1: # проверка на количестово символов.
        fractional_part[1] += '0'    # Если меньше двух, добавляем 0
    message += f'{int(whole_part)} руб {fractional_part[1]} коп, '
print('Первое задание:\n', message)
print('-' * 134, '\n', 'Второе задание:\n','текущее id листа: ', id(price))
price.sort()
print('Цены, отсортированные по возрастанию: ', price, '\n', 'id листа после сортировки:', id(price))
new_price = sorted(price, reverse=True)
print('-' * 134, '\n', 'Третье задание:\n', 'Цены, отсортированные по убыванию: ', new_price)
print('-' * 134, '\n', 'четвертое задание: \n','Цена пяти самых дорогих товаров: ', new_price[0:5])
